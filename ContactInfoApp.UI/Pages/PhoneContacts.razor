@page "/phone-contacts"
@using ContactInfoApp.UI.Model
@using ContactInfoApp.UI.Interfaces

<h3>Недавние вызовы</h3>

@if (_callLogs != null)
{
    @*<table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Date</th>
                <th>Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var callLog in _callLogs)
            {
                <tr>
                    <td>@callLog.CallName</td>
                    <td>@callLog.CallDate</td>
                    <td>@callLog.CallNumber</td>
                    <td>
                        <RadzenButton Click="args => GetContactInfoClick(args, callLog)" Icon="info" />
                    </td>
                </tr>
            }
        </tbody>
    </table>*@

    <RadzenDataList Data="@_callLogs" TItem="CallLogModel">
        <Template Context="callLog">
            <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                <div class="container pr-0">
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                @if (!string.IsNullOrEmpty(@callLog.CallName))
                                {
                                    @($"{callLog.CallName} - {callLog.CallNumber}")
                                }
                                else
                                {
                                    @callLog.CallNumber
                                }
                            </div>
                            <div class="row">
                                @switch (callLog.CallType)
                                {
                                    case "Incoming": <RadzenIcon Icon="call_made"></RadzenIcon> break;
                                    case "Outgoing": <RadzenIcon Icon="call_received"></RadzenIcon> break;
                                    case "Blocked": <RadzenIcon Icon="block" class="text-danger"></RadzenIcon> break;
                                }
                                &nbsp;&bull; @callLog.CallDate
                            </div>
                        </div>
                        <div class="col-auto d-flex">
                            <div class="align-self-center">
                                <RadzenButton Click="args => GetContactInfoClick(args, callLog)" Icon="info"/>
                            </div>
                        </div>
                    </div>
                </div>
            </RadzenCard>
        </Template>
    </RadzenDataList>
}
else
{
    <div class="spinner"></div>
}

@code {
    private IEnumerable<CallLogModel> _callLogs;

    [Inject] private NavigationManager NavigationManager { get; set; }

    [Inject] private ICallLogService CallLogService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _callLogs = CallLogService.GetCallLogs();
    }

    private void GetContactInfoClick(MouseEventArgs e, CallLogModel callLog)
    {
        NavigationManager.NavigateTo($"/home/{callLog.CallNumber}");
    }
}
