@using ContactInfoApp.Client.HttpClients
@using ContactInfoApp.Client.Exceptions

@inject DialogService DialogService

@inject ContactHttpClient ContactHttpClient
@inject ComputerVisionHttpClient ComputerVisionHttpClient

<div class="row mb-2">
    <div class="col-md-12">
        <RadzenImage Path=@($"data:image/jpeg;base64,{Image}") Style="width: 100%" />
    </div>
</div>
<div class="row mb-2 justify-content-center">
    <div class="col-auto">
        @if (!_isLoading)
        {
            <RadzenButton Click="RefreshClick" ButtonStyle="ButtonStyle.Info" Icon="refresh" />
            <RadzenButton Click="RecognizeClick" ButtonStyle="ButtonStyle.Light" Icon="text_snippet" />
        }
        else
        {
            <div class="spinner-inline"></div>
        }
    </div>
</div>
<div class="row mb-2">
    <div class="col-md-12">
        <RadzenTextBox Value="@_verificationCode" Placeholder="Введите код с картинки" @oninput="args => _verificationCode = args.Value?.ToString()" @onkeydown="@Enter" Style="width: 100%" />
    </div>
</div>
<div class="row justify-content-end">
    <div class="col-auto">
        <RadzenButton Click="args => DialogService.Close(_verificationCode)" ButtonStyle="ButtonStyle.Primary" Text="Ok"
                      Disabled="string.IsNullOrEmpty(_verificationCode)" />
        <RadzenButton Click="args => DialogService.Close()" ButtonStyle="ButtonStyle.Secondary" Text="Отмена" />
    </div>
</div>
@code {
    [Parameter] public string Image { get; set; }

    string _verificationCode;

    bool _isLoading;

    private async Task RecognizeClick(MouseEventArgs e)
    {
        try
        {
            _isLoading = true;
            _verificationCode = await ComputerVisionHttpClient.GetTextAsync(Image);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task RefreshClick(MouseEventArgs e)
    {
        try
        {
            _isLoading = true;
            await ContactHttpClient.VerifyCodeAsync("");
        }
        catch (ContactRequestException ex)
        {
            Image = ex.ErrorResult?.Image;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void Enter(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter")
        {
            DialogService.Close(_verificationCode);
        }
    }
}
