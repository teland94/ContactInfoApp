@using ContactInfoApp.Client.HttpClients
@using ContactInfoApp.Client.Exceptions

@inject DialogService DialogService

@inject ContactHttpClient ContactHttpClient
@inject ComputerVisionHttpClient ComputerVisionHttpClient

<div class="row mb-2">
    <div class="col-md-12">
        <RadzenImage Path="@($"data:image/jpeg;base64,{Image}")" Style="width: 100%"></RadzenImage>
    </div>
</div>
<div class="row mb-2 justify-content-center">
    <div class="col-auto">
        <RadzenButton Click="RefreshClick" ButtonStyle="ButtonStyle.Info" Icon="refresh" />
        <RadzenButton Click="RecognizeClick" ButtonStyle="ButtonStyle.Light" Icon="text_snippet" />
    </div>
</div>
<div class="row mb-2">
    <div class="col-md-12">
        <RadzenTextBox @bind-Value=@_verificationCode Placeholder="Введите код с картинки" Style="width: 100%"></RadzenTextBox>
    </div>
</div>
<div class="row justify-content-end">
    <div class="col-auto">
        <RadzenButton Click="@((args) => DialogService.Close(_verificationCode))" Text="Ok" />
        <RadzenButton Click="@((args) => DialogService.Close())" ButtonStyle="ButtonStyle.Secondary" Text="Отмена" />
    </div>
</div>
@code {
    [Parameter] public string Image { get; set; }

    string _verificationCode;

    private async Task RecognizeClick(MouseEventArgs e)
    {
        _verificationCode = await ComputerVisionHttpClient.GetText(Image);
    }

    private async Task RefreshClick(MouseEventArgs e)
    {
        try
        {
            await ContactHttpClient.VerifyCodeAsync("");
        }
        catch (ContactRequestException ex)
        {
            Image = ex.ErrorResult?.Image;
        }
    }
}
