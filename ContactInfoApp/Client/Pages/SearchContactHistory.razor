@page "/search-contact-history"

@using ContactInfoApp.Client.HttpClients
@using ContactInfoApp.Shared.Models

@inject SearchContactHistoryHttpClient SearchContactHistoryHttpClient

@inject DialogService DialogService

<h3>История поиска</h3>

<div class="row">
    <div class="col-xl-5 col-md-6 col-sm-12 mb-2">
        <div class="input-group">
            <RadzenTextBox Value=@_searchQuery Placeholder="Поиск..." @oninput="args => SearchChange(args.Value?.ToString())" @ref="_textBox" class="form-control" />
            <div class="input-group-append">
                <RadzenButton Click="async args => { SearchChange(null); await _textBox.Element.FocusAsync(); }" Icon="clear" ButtonStyle="ButtonStyle.Light" />
            </div>
        </div>
    </div>
    <div class="col-xl-7 col-md-6 col-sm-12 mb-2">
        <RadzenButton Click="DeleteSearchContactItemClick" Icon="delete" ButtonStyle="ButtonStyle.Danger" Disabled="_selectedSearchContactHistoryItem == null" />
    </div>
</div>

<RadzenGrid Data="_searchContactHistoryItems" TItem="SearchContactHistoryModel" ExpandMode="DataGridExpandMode.Multiple"
            SelectionMode="DataGridSelectionMode.Single" @bind-Value="_selectedSearchContactHistoryItem"
            RowRender="RowRender" RowClick="args => StateHasChanged()" Responsive="false" EmptyText="Нет записей для отображения."
            AllowPaging="true" PageSize="15" AllowColumnResize="true">
    <Template Context="data">
        @if (data.Tags != null)
        {
            <div class="mb-2">
                @string.Join(", ", data.Tags)
            </div>
        }
        @if (data.TagCount != null)
        {
            <div>
                Количество тегов: @data.TagCount
            </div>
        }
    </Template>
    <Columns>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="IsSpam" Width="42px">
            <Template Context="data">
                <span class="icon-item @(data.IsSpam ? "text-danger" : "")"><RadzenIcon Icon="contact_page" /></span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="Date" Title="Дата" Width="180px">
            <Template Context="data">
                @data.Date.ToLocalTime()
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="IpAddress" Title="IP-адрес" Width="120px"/>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="PhoneNumber" Title="Номер телефона" Width="150px"/>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="DisplayName" Title="Имя" Width="250px"/>
        <RadzenGridColumn TItem="SearchContactHistoryModel" Property="Tags" Title="Теги">
            <Template Context="data">
                @if (data.Tags != null)
                {
                    @string.Join(", ", data.Tags)
                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

@code {
    IEnumerable<SearchContactHistoryModel> _searchContactHistoryRawItems;
    IEnumerable<SearchContactHistoryModel> _searchContactHistoryItems;

    private string _searchQuery;
    private object _selectedSearchContactHistoryItem;

    private RadzenTextBox _textBox;

    protected override async Task OnInitializedAsync()
    {
        _searchContactHistoryRawItems = await SearchContactHistoryHttpClient.GetAsync();
        _searchContactHistoryItems = _searchContactHistoryRawItems;
    }

    private void RowRender(RowRenderEventArgs<SearchContactHistoryModel> args)
    {
        args.Expandable = args.Data.Tags != null && args.Data.Tags.Any();
    }

    private void SearchChange(string value)
    {
        _searchQuery = value;
        CheckSearchContactHistoryFilter();
    }

    private async Task DeleteSearchContactItemClick(MouseEventArgs e)
    {
        if (_selectedSearchContactHistoryItem == null) { return; }
        var searchContactHistoryItem = (SearchContactHistoryModel)_selectedSearchContactHistoryItem;
        var confirmResult = await DialogService.Confirm($"Вы действительно хотите удалить запись: {searchContactHistoryItem.DisplayName} - {searchContactHistoryItem.PhoneNumber}",
            "Удаление", new ConfirmOptions { OkButtonText = "Да", CancelButtonText = "Нет" });
        if (confirmResult.HasValue && confirmResult.Value)
        {
            await SearchContactHistoryHttpClient.DeleteAsync(searchContactHistoryItem.Id);
            _searchContactHistoryRawItems = _searchContactHistoryRawItems.Where(sch => sch.Id != searchContactHistoryItem.Id);
            CheckSearchContactHistoryFilter();
        }
    }

    private void CheckSearchContactHistoryFilter()
    {
        if (string.IsNullOrEmpty(_searchQuery))
        {
            _searchContactHistoryItems = _searchContactHistoryRawItems;
            return;
        }
        _searchContactHistoryItems = _searchContactHistoryRawItems
            .Where(sch =>
                sch.PhoneNumber.Contains(_searchQuery, StringComparison.OrdinalIgnoreCase)
                || sch.DisplayName.Contains(_searchQuery, StringComparison.OrdinalIgnoreCase)
                || sch.Tags != null && sch.Tags.Any(t => t.Contains(_searchQuery, StringComparison.OrdinalIgnoreCase)));
    }
}
